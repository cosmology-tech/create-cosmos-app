/**
* This file and any referenced files were automatically generated by @cosmology/telescope@1.3.2
* DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain
* and run the transpile command or yarn proto command to regenerate this bundle.
*/
import { BinaryReader } from "./binary";
import { Any, AnyAmino } from "./google/protobuf/any";
import { TelescopeGeneratedCodec } from "./types";
export declare class GlobalDecoderRegistry {
    static registry: {
        [key: string]: TelescopeGeneratedCodec<any, any, any>;
    };
    static aminoProtoMapping: {
        [key: string]: string;
    };
    static registerAminoProtoMapping(aminoType: string, typeUrl: any): void;
    static register<T, SDK, Amino>(key: string, decoder: TelescopeGeneratedCodec<T, SDK, Amino>): void;
    static getDecoder<T, SDK, Amino>(key: string): TelescopeGeneratedCodec<T, SDK, Amino>;
    static getDecoderByInstance<T, SDK, Amino>(obj: unknown): TelescopeGeneratedCodec<T, SDK, Amino> | null;
    static getDecoderByAminoType<T, SDK, Amino>(type: string): TelescopeGeneratedCodec<T, SDK, Amino> | null;
    static wrapAny(obj: unknown): Any;
    static unwrapAny<T, SDK, Amino>(input: BinaryReader | Uint8Array | Any): any;
    static fromJSON<T>(object: any): T;
    static toJSON<T>(message: T): any;
    static fromPartial<T>(object: unknown): T;
    static fromSDK<T = unknown, SDK = unknown>(object: SDK): T;
    static fromSDKJSON<SDK = unknown>(object: any): SDK;
    static toSDK<T = unknown, SDK = unknown>(object: T): SDK;
    static fromAmino<T = unknown, Amino = unknown>(object: Amino): T;
    static fromAminoMsg<T = unknown, Amino = unknown>(object: AnyAmino): T;
    static toAmino<T = unknown, Amino = unknown>(object: T): Amino;
    static toAminoMsg<T = unknown, Amino = unknown>(object: T): AnyAmino;
}
